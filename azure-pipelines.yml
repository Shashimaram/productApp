# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  - name: commit
    value: NONE


pool:
  vmImage: ubuntu-latest

stages: 
- stage:
  jobs:
  - job: 
    steps:
      - bash: |
          sourceVersionMessage="$(Build.SourceVersionMessage)"
          extractedString=${sourceVersionMessage:0:5}
          echo "The first 5 characters are: $extractedString"
          echo '##vso[task.setvariable variable=commit]'$extractedString
      - script: |
          echo "##vso[task.setvariable variable=filePath]"
          if [ "${{ variables.commit }}" == "bkend" ]; then
            echo "**/backend/Dockerfile"
          elif [ "${{ variables.commit }}" == "ftend" ]; then
            echo "**/frontend/Dockerfile"
          fi
        displayName: 'Set filePath variable'
      - script: |
          echo "##vso[task.setvariable variable=repo_name]"
          if [ "${{ variables.commit }}" == "bkend" ]; then
            echo "shashidher/product_backend"
          elif [ "${{ variables.commit }}" == "ftend" ]; then
            echo "shashidher/frontend_backend"
          fi
        displayName: "setting Reponame"

- stage: buildPush
  condition: or(eq(variables['commit'], 'ftend'), eq(variables['commit'], 'bkend'))
  jobs:
    - job: installingDockerCli
      steps:

        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'

        - task: Docker@2
          inputs:
            containerRegistry: 'mydockerhub'
            repository: $(repo_name)
            command: 'buildAndPush'
            Dockerfile: $(filepath)
            tags: '$(Build.BuildId)'
            addPipelineData: true
        - script: sudo docker images
          displayName: checkingDockerImages


- stage: ScanningImage
  dependsOn: buildPush
  jobs:
    - job: installingTrivyOnAgent
      steps:
        - task: DockerInstaller@0
          inputs:
              dockerVersion: '17.09.0-ce'
        - task: Docker@2
          inputs:
            containerRegistry: 'mydockerhub'
            command: 'login'
        - script: |
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy
        
        - script: |
            trivy image --severity HIGH,CRITICAL --format template --template "@./template/junit.tpl" -o junit-test.xml $(repo_name):'$(Build.BuildId)'
          displayName: scanning Image

        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/**-test.xml'
            mergeTestResults: true
            failTaskOnFailedTests: false
            testRunTitle: 'Trivy Vulnerabilities'
          condition: 'always()'